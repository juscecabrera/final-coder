<div class="box">
    <h1>Productos</h1>
    <hr>
    <div class="products-form">
        <h2>Crear Producto</h2>
        <form id="create-product-form">
            <label for="title">Título</label>
            <input name="title" id="title" type="text">

            <label for="description">Descripción</label>
            <input name="description" id="description" type="text">

            <label for="price">Precio</label>
            <input name="price" id="price" type="number">

            <label for="stock">Stock</label>
            <input name="stock" id="stock" type="number">

            <button type="submit">Crear</button>
        </form>
    </div>

    <hr>

    <div class="products-box">
        {{#each products}}
            <div class="product-card">
                <h3>{{this.title}}</h3>
                <p>Descripción: {{this.description}}</p>
                <p>Precio: $ {{this.price}}</p>
                <p>Stock: {{this.stock}}</p>
                <button id="button-delete" onclick="deleteProduct('{{this.id}}')">Eliminar</button>
                <hr>
            </div>
        {{/each}}
    </div>
     <a href="/private">Home</a>
</div>

{{!-- <script src="/socket.io/socket.io.js"></script>
<script src="../../public/js/index.js"></script> --}}
<style>
    .products-box {
        display: flex;
    }
    .product-card {
        border: 1px solid black;
        margin: 0 1rem;
        padding: 1rem;
    }
</style>
<script>
    document.getElementById('create-product-form').addEventListener('submit', async function(event) {
        event.preventDefault();
        
        const formData = new FormData(this);
        const data = {
            title: formData.get('title'),
            description: formData.get('description'),
            price: formData.get('price'),
            stock: formData.get('stock')
        };
        
        try {
            const response = await fetch('/api/products', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(data)
            });

            if (response.ok) {
                const result = await response.json();
                console.log('Producto agregado con éxito:', result);
                location.reload()
            } else {
                const error = await response.json();
                console.error('Error al agregar el producto:', error);
            }
        } catch (error) {
            console.error('Error en la solicitud:', error);
        }
    });

    
    async function deleteProduct(pid) {
    try {
        console.log("hola")
        const response = await fetch(`/api/products/${pid}`, {
            method: 'DELETE',
            headers: {
                'Content-Type': 'application/json'
            }
        });

        if (response.ok) {
            console.log('Producto eliminado con éxito');
            location.reload()
        } else {
            console.error('Error al eliminar el producto');
        }
    } catch (error) {
        console.error('Error en la solicitud:', error);
    }
}   

</script>